# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  # The Node.js orb contains a set of prepackaged CircleCI configuration you can utilize
  # Orbs reduce the amount of configuration required for common tasks.
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/node
  node: circleci/node@4.7
  aws-s3: circleci/aws-s3@3.1

jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-test:
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/node
    docker:
      - image: cimg/node:16.10
    # Then run your tests!
    # CircleCI will report the results back to your VCS provider.
    steps:
      # Checkout the code as the first step.
      - checkout
      # Next, the node orb's install-packages step will install the dependencies from a package.json.
      # The orb install-packages step will also automatically cache them for faster future runs.
      - node/install-packages:
          # If you are using yarn, change the line below from "npm" to "yarn"
          pkg-manager: npm
      - run:
          name: Check repository status
          command: "git status || true"
      - run:
          name: Build package
          command: npm run build
      - run:
          name: Check repository status again
          command: "git status || true"
      - add_ssh_keys:
          fingerprints:
            - "dc:28:3f:db:6c:1b:0e:c1:be:cf:0d:81:84:60:de:0d"
      - run:
          name: Add Git name and email
          command: "git config --global user.name 'CircleCI' && git config --global user.email 'circleci@menhera.org'"
      - run:
          name: List SSH keys
          command: "ls -l ~/.ssh/"
      - run:
          name: Set SSH key for use with Git
          command: "rm -f ~/.ssh/id_rsa.pub ~/.ssh/id_rsa ~/.ssh/config && git config --global core.sshCommand 'ssh -i ~/.ssh/id_rsa_dc283fdb6c1b0ec1becf0d818460de0d -F /dev/null' && ssh-add -D && ssh-add ~/.ssh/id_rsa_dc283fdb6c1b0ec1becf0d818460de0d"
      - run:
          name: Clone repository
          command: "git clone git@github.com:menhera-org/ctg-releases.git ~/ctg-releases"
      - run:
          name: Copy artifacts
          command: "mkdir -p ~/ctg-releases/build-metadata && cp build-metadata/*.json ~/ctg-releases/build-metadata/"
      - run:
          name: Commit artifacts and push to GitHub
          command: "( cd ~/ctg-releases && git add . && git commit -m 'CircleCI updates' && git push )"
      - aws-s3/copy:
          from: builds/*.xpi
          install-aws-cli: false
          to: s3://menhera-downloads/ctg

workflows:
  # Below is the definition of your workflow.
  # Inside the workflow, you provide the jobs you want to run, e.g this workflow runs the build-and-test job above.
  # CircleCI will run this workflow on every commit.
  # For more details on extending your workflow, see the configuration docs: https://circleci.com/docs/2.0/configuration-reference/#workflows
  build:
    jobs:
      - build-and-test
      # For running simple node tests, you could optionally use the node/test job from the orb to replicate and replace the job above in fewer lines.
      # - node/test
