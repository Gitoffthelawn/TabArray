/* -*- indent-tabs-mode: nil; tab-width: 2; -*- */
/* vim: set ts=2 sw=2 et ai : */

/*
  Container Tab Groups
  Copyright (C) 2023 Menhera.org

  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

@import url(../theme.css);

a {
  text-decoration: none;
  color: var(--accent-color);
}

button {
  color: var(--button-text-color);
  background-color: transparent;
  border: none;
  appearance: none;
}

a:active, button:active {
  opacity: .75;
}

input:is([type="text"], [type="search"]), button, select, textarea {
  font: inherit;
  display: block;
  box-sizing: border-box;
  margin: 0;
  inline-size: 100%;
  min-inline-size: 0;
}

button {
  padding-inline: 1em;
  padding-block: .5em;
  text-align: start;
}

:root {
  inline-size: 100%;
  block-size: 100%;
  min-inline-size: 0;
  min-block-size: 0;
  /* max-inline-size: max-content;
  max-block-size: max-content; */
  display: block flex;
  flex-direction: column;
}

body {
  font-family: system-ui, sans-serif;
  color: var(--text-color);
  background-color: var(--background-color);
  overflow-block: auto;
  overflow-inline: hidden;
  margin: 0;
  display: block flex;
  position: relative;
  flex-direction: column;
}

body.popup {
  width: 400px;
  height: 333px;
}

body.popup.popup-large {
  width: 480px;
  height: 500px;
}

body:not(.popup) {
  min-inline-size: 0;
  min-block-size: 0;
  flex: 1;
  inline-size: 100%;
}

body > ctg-vertical-layout {
  flex: 1;
  inline-size: 100%;
}

#top-bar {
  z-index: 20;
}

#frame-layout {
  flex: 1;
  min-block-size: 0;
}

#frame-layout > ctg-fragment {
  display: block;
  overflow-inline: hidden;
  overflow-block: auto;
  min-block-size: 0;
  flex: 1;
}

#fragment-help {
  padding-inline: 1rem;
  max-inline-size: 32rem;
  align-self: center;
}

.modal-actions {
  margin-block: 1em;
  display: block flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: space-around;
  row-gap: 1em;
}

.modal-actions > button {
  inline-size: max-content;
  border-radius: .25em;
}

.modal-actions > button:focus {
  box-shadow: 0 0 .25rem .25rem var(--accent-color);
  outline: none;
}

.modal-actions > button:disabled {
  display: none;
}

.modal-actions > button.button-default {
  background-color: #0033cc;
  color: #fff;
}

.active-containers:not(:empty) {
  border-block-end: solid 1px var(--border-color);
}

.window-label > button {
  background-size: 1.5em;
  background-repeat: no-repeat;
  background-position: center center;
  opacity: 0;
  padding: 0;
  background-color: transparent;
  display: block;
}

.window-label {
  position: sticky;
  inset-block-start: -.125rem;
  background-color: var(--background-color);
  z-index: 2;
  box-shadow: 0 0 .5em var(--background-color), 0 0 .5em var(--background-color);
  display: grid;
  grid-template-columns: 1fr max-content max-content max-content;
  border-block-start: solid .125rem var(--border-color);
  padding-inline-end: 1em;
}

.window-label > .window-label-name {
  padding-inline: 2em;
  padding-block: .5em;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  font-weight: bold;
}

.window-label > .window-label-name[data-tab-count]::after {
  content: ' (' attr(data-tab-count) ')';
  opacity: var(--opaque-opacity);
}

.window-label > button {
  opacity: var(--opaque-opacity);
  inline-size: 2em;
}

.window-label > button:disabled {
  display: none;
}

.window-label > button:focus, .window-label > button:hover {
  opacity: 1;
}

.window-label > .window-collapse-button {
  mask: url(/img/material-icons/unfold_less.svg) center center/contain no-repeat;
  background-color: var(--text-color);
}

.window-label > .window-expand-button {
  mask: url(/img/material-icons/unfold_more.svg) center center/contain no-repeat;
  background-color: var(--text-color);
}

.window-label > .window-close-button {
  mask: url(/img/firefox-icons/close.svg) center center/50% no-repeat;
  background-color: var(--text-color);
}
